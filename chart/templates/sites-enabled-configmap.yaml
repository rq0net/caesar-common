kind: ConfigMap
apiVersion: v1
metadata:
  name: {{ include "celery.fullname" . }}-sites-enabled-configmap
data:
  ucr-app.conf: |
    upstream django {
      server 127.0.0.1:3000 fail_timeout=0;
    }

    server {
      listen {{ .Values.nginx.listenPort }};
      client_max_body_size 4G;

      # set the correct host(s) for your site
      server_name {{ join " " .Values.nginx.hosts }};

      access_log /var/log/nginx/access.log combined;
      error_log  /var/log/nginx/error.log info;

      keepalive_timeout 5;

      # path for static files (only needed for serving local staticfiles)
      root /var/www/html/;

      location @process_uwsgi {
        uwsgi_pass  django;
        
        uwsgi_connect_timeout           600s;
        uwsgi_read_timeout              600s;
        uwsgi_send_timeout              600s;

        uwsgi_param  QUERY_STRING       $query_string;
        uwsgi_param  REQUEST_METHOD     $request_method;
        uwsgi_param  CONTENT_TYPE       $content_type;
        uwsgi_param  CONTENT_LENGTH     $content_length;

        uwsgi_param  REQUEST_URI        $request_uri;
        uwsgi_param  PATH_INFO          $document_uri;
        uwsgi_param  DOCUMENT_ROOT      $document_root;
        uwsgi_param  SERVER_PROTOCOL    $server_protocol;
        uwsgi_param  REQUEST_SCHEME     $scheme;
        uwsgi_param  HTTPS              $https if_not_empty;

        uwsgi_param  REMOTE_ADDR        $remote_addr;
        uwsgi_param  REMOTE_PORT        $remote_port;
        uwsgi_param  SERVER_PORT        $server_port;
        uwsgi_param  SERVER_NAME        $server_name;

      }

      location / {
        try_files $uri $uri/ @process_uwsgi;
      }

      # location / {
      #   # checks for static file, if not found proxy to app
      #   try_files $uri @proxy_to_app;
      # }

      # location @proxy_to_app {
      #   proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      #   proxy_set_header X-Forwarded-Proto $scheme;
      #   proxy_set_header Host $http_host;

      #   proxy_redirect off;
      #   proxy_pass http://app_server;
      # }

      error_page 500 502 503 504 /500.html;
      location = /500.html {
        root /var/www/html/;
      }
    }
